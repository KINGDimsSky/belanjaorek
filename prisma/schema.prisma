// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(cuid())
  email               String     @unique
  username            String     @unique
  password            String?
  role                String     @default("user")
  image               String?    @default("/user.png")
  Product             Product[]
  TwoVerificationStep Boolean    @default(false) @map("2fa")
  Wishlist            Wishlist[]
  Cart                Cart[]

  @@index(email)
  @@map("users")
}

model Product {
  id                 String               @id @default(cuid())
  name               String
  slug               String               @unique
  price              Int
  image              String?              @default("/NoProduct.jpg")
  IsDiscount         Boolean              @default(false) @map("isdiscount")
  Stock              Int
  DiscountPrice      Int?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  userId             String
  categoryId         String
  Wishlist           Wishlist[]
  Cart               Cart[]
  ProductImage       ProductImage[]
  ProductDescription ProductDescription[]

  category Category @relation(fields: [categoryId], references: [id])
  Seller   User     @relation(fields: [userId], references: [id])

  @@index([slug])
  @@map("product")
}

model ProductImage {
  id        String  @id @default(cuid())
  url       String  @unique
  name      String
  productId String
  Product   Product @relation(fields: [productId], references: [id])

  @@map("product_image")
}

model ProductDescription {
  id                String  @id @default(cuid())
  description       String
  VerifiedProduct   Boolean @default(false) @map("verifiedproduct")
  productId         String
  LatestVersion     String  @default("v1") @map("latestversion")
  LicensesAgreement String  @default("No Licenses") @map("licensesagreement")
  Product           Product @relation(fields: [productId], references: [id])

  @@map("product_description")
}

model Wishlist {
  id        String  @id @default(cuid())
  userId    String
  productId String
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, productId])
  @@map("wishlist")
}

model Cart {
  id        String  @id @default(cuid())
  userId    String
  productId String
  quantity  Int     @default(1)
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
  @@map("cart")
}

//model CartItems 

//model Order 
//model OrderItem 

//model Log_Transaction


model Category {
  id      String    @id @default(cuid())
  title   String
  slug    String
  Product Product[]

  @@unique([title, slug])
  @@map("category")
}
