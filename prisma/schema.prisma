// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  username String    @unique
  password String
  role     String    @default("user")
  image    String    @default("/user.png")
  Posts    Posts[]
  Product  Product[]

  @@index(email)
  @@map("users")
}

model Product {
  id         String   @id @default(cuid())
  name       String
  price      Int
  IsDiscount Boolean  @default(false) @map("isdiscount")
  Stock Int
  DiscountPrice Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  

  Seller     User     @relation(fields: [userId], references: [id])
  userId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  @@map("product")
}

model Category {
  id      String    @id @default(cuid())
  title   String    @unique
  slug    String
  Product Product[]

  @@map("category")
}

model Posts {
  id        String   @id @default(cuid())
  title     String
  content   String
  published Boolean  @default(false)
  slug      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Author    User     @relation(fields: [AuthorId], references: [id])
  AuthorId  String

  @@index([slug])
  @@map("posts")
}
